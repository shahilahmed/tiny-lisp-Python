##(eq ((ne 8 (gt 56 (ge 4 5))) (lt 12 (le 4 5))))##(eq 6 7)##(not (eq 6 5) (ne 6 5) (lt 8 7) (le 8 7) (gt 56 98) (ge 6 7)) ##(if (eq 5 6) (add 5 6) (add 6 8))##(define num (add a 8))##((lambda (x y) (add x y)) 1 6)##(define fibo (lambda (n) (if (le n 1)  1 (add (fibo (sub n 1)) (fibo (sub n 2))))))##(defun (sq x) (mul x x))##(defun  (times x) (lambda (y) (mul x y)))##(print "Square of " 6 (sq 7))(define num (cond ((ne 7 8) (add 7 8)) ((eq 9 9) (add 10 20)) ((ne 5 6) (add 5 7))))(print num)